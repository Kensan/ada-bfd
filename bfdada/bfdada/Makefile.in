SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
incdir=$(includedir)/bfdada
alidir=$(includedir)/bfdada
@SET_MAKE@

BUILD_SHARED=no

GNATMAKE=@GNATMAKE@
CHMOD=chmod
CP=cp -f
RANLIB=@RANLIB@

MKDOC=$(top_srcdir)/doc/mkdoc.pl

.SUFFIXES:
.SUFFIXES: .c .o .ads .adb .ali

.PHONY:
.PHONY: clean-generic mostlyclean-generic \
	clean distclean mostlyclean maintainer-clean

MAKE_ADB = make_bfd

CFLAGS = @CFLAGS@ -Wall -I.. $(FPIC)

GNATMAKEBINDFLAGS =
GNATMAKELDFLAGS =
GNATFLAGS=-g -gnaty
GNATFLAGS_DEVEL=-g -gnaty

GETTEXT_INTL=@GETTEXT_INTL@
HAVE_GETTEXT=@HAVE_GETTEXT@

CD = cd
MKDIR = mkdir -p
RMDIR = rmdir
MV = mv
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

LIBNAME       = libbfdada$(SO_EXT)
SONAME        = libbfdada-$(MAJOR).$(MINOR)$(SO_EXT).$(MICRO)
ARCHIVENAME   = libbfdada.a

c_objects = bfdc.o

## General and public targets

all: dirs libs
	$(MAKE) -C testsuite $@

check:
	$(MAKE) -C testsuite $@

ifeq ($(BUILD_SHARED),yes)
libs: $(LIBNAME) $(ARCHIVENAME)
else
libs: $(ARCHIVENAME)
endif

## Private targets

dirs:: force

$(LIBNAME):: $(MAKE_ADB).o ${wildcard *.o} $(c_objects)
ifeq ($(BUILD_SHARED),yes)
	$(CC) -shared $(FPIC) $(OS_SPECIFIC_LINK_OPTIONS) -o $(SONAME) \
	  $(SO_OPTS)$(SONAME) bfd*.o \
	  $(c_objects)
	$(RM) $(LIBNAME)
	$(LN) $(SONAME) $(LIBNAME)
	-@if [ ! -f .devel ]; then \
	  strip $(LIBNAME); \
	  $(CHMOD) +x $(LIBNAME); \
	fi
endif

$(ARCHIVENAME):: $(MAKE_ADB).o ${wildcard *.o} $(c_objects)
	$(AR) $(ARFLAGS) $(ARCHIVENAME) bfd*.o $(c_objects)
	if [ -f /usr/bin/$(RANLIB) -o -f /bin/$(RANLIB) ]; then \
	  $(RANLIB) $(ARCHIVENAME); \
	fi

$(MAKE_ADB).o:: force
	$(GNATMAKE) -I$(srcdir) -c $(MAKE_ADB) $(GNATFLAGS) $(FPIC)

ADABROWSE=adabrowse
ADABROWSE_FLAGS=-t -c $(top_srcdir)/doc/bfdada.cfg -f- -o ../doc/html/

html::
	test -d ../doc/html || mkdir -p ../doc/html
	ls -1 $(srcdir)/*.ads | $(ADABROWSE) $(ADABROWSE_FLAGS)

install: all
	if [ "$(prefix)" != `pwd` ]; then \
	   echo Installing BfdAda in $(prefix); \
	   $(MKDIR) $(bindir); \
	   $(MKDIR) $(libdir); \
	   $(MKDIR) $(incdir); \
	   $(MKDIR) $(alidir); \
	   $(INSTALL_DATA) $(ARCHIVENAME) $(libdir); \
	   if [ $(BUILD_SHARED) = yes ]; then \
	     $(INSTALL_DATA) $(SONAME) $(libdir); \
	     $(RM) $(libdir)/$(LIBNAME); \
	     $(LN) $(SONAME) $(libdir)/$(LIBNAME); \
	   fi; \
	   $(CP) $(srcdir)/bfd*.ads $(incdir); \
	   $(CP) $(srcdir)/bfd*.adb $(incdir); \
	   $(CP) bfd*.ali $(alidir); \
	   $(CHMOD) -w $(alidir)/*.ali; \
	fi
	@echo '------------------------------------------------------------------'
	@echo '--  BfdAda has now been installed.                              --'
	@echo '--  To be able to use the library, you may need to update your  --'
	@echo '--  LD_LIBRARY_PATH or to run ldconfig.                         --'
	@echo '------------------------------------------------------------------'

clean-generic:
	-${RM} *.o *.ali *~ b_*.c b~*.ad? core
	-${RM} $(ARCHIVENAME) $(LIBNAME) $(SONAME)
	-${RM} .\#*
	-$(MAKE) -C testsuite clean

mostlyclean-generic: clean-generic
	-${RM} Makefile

clean: clean-generic

distclean: mostlyclean-generic
	-$(RM) Makefile.common

mostlyclean: mostlyclean-generic
	-$(RM) Makefile.common

maintainer-clean: mostlyclean-generic
	-$(RM) Makefile.common

## Building the C files: they all depend on the c file in the source directory
## The dependencies on the .h files have to be given explicitly

$(c_objects): %.o : %.c
	$(CC) -c $(CFLAGS) $<

force:

dist:	distdir

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

DISTFILES=*.ad[bs] Makefile.in bfdc.c
SUBDIRS=testsuite

distdir:
	cp -pr $(DISTFILES) $(distdir)/
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
